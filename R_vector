## R에서의 벡터
> a <- c(1, 2, 3)
> a
[1] 1 2 3
> b <- c(1, 10, c(10:15))
> b
[1]  1 10 10 11 12 13 14 15
> i <- seq(1, 10, by = 2)
> i
[1] 1 3 5 7 9
> j <- seq(0, 1, by = 0.1)
> j
 [1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
> k <- seq(0, 1, length.out = 11)   # length.out는 벡터의 갯 수
> k
 [1] 0.0 0.1 0.2 0.3 0.4 0.5 0.6 0.7 0.8 0.9 1.0
> x <- rep(c(1:3), times = 2)
> x
[1] 1 2 3 1 2 3
> y <- rep(c(1:3), each = 2)
> y
[1] 1 1 2 2 3 3

## 벡터 조종하기
> m <- c(1:5)
> m
[1] 1 2 3 4 5

> m[3] <- 7
> m
[1] 1 2 7 4 5

> m[c(2,4)] <- 6
> m
[1] 1 6 7 6 5

> m[m>5] <- 9
> m
[1] 1 9 9 9 5

> length(m)
[1] 5

> m[1:length(m)] <- 1
> m
[1] 1 1 1 1 1

## 벡터 
> a <- c(1:5)
> a
[1] 1 2 3 4 5

> #앞에 0추가 하기
> a <- c(0, a)
> a
[1] 0 1 2 3 4 5

> #앞에 -3 -2 -1 추가하기
> a <- c(c(-3:-1), a)
> a
[1] -3 -2 -1  0  1  2  3  4  5

> #뒤에 6추가하기
> a <- c(a, 6)
> a
 [1] -3 -2 -1  0  1  2  3  4  5  6

#벡터에 벡터를 추가
> a2 <- c(7:10)
> a2
[1]  7  8  9 10
> a3 <- c(a, a2)
> a3
 [1] -3 -2 -1  0  1  2  3  4  5  6  7  8  9 10
 
 #append 사용
 > a1 <- c("a", "b", "c", "f", "g")
> a2 <- c("d", "e")
> 
> #a1의 3번째 요소 뒤에 a2를 추가함
> append(a1, a2, 3)
[1] "a" "b" "c" "d" "e" "f" "g"
> 
> a1
[1] "a" "b" "c" "f" "g"
> 
> #a1 결과 변경
> a1 <- append(a1, a2, 3)
> a1
[1] "a" "b" "c" "d" "e" "f" "g"

#
> d1 <- c(11:20)
> d1
 [1] 11 12 13 14 15 16 17 18 19 20
> 
> #d1의 3, 5번째 요소 선택 제외 
> d1[-c(3, 5)]
[1] 11 12 14 16 17 18 19 20

#벡터의 연산
> a <- c(1:4)
> b <- c(5:8)
> 
> c <- a+b
> c
[1]  6  8 10 12
> 
> d<- a-b
> d
[1] -4 -4 -4 -4
> e <- a*b
> e
[1]  5 12 21 32

#길이가 다른 벡터의 연산
> a <- c(1, 2, 3, 4, 5)
> b <- c(2, 4)
> c <- a + b
경고메시지(들): 
In a + b : 두 객체의 길이가 서로 배수관계에 있지 않습니다
> c
[1] 3 6 5 8 7

#all함수, any함수 사용
> x <- c(1:10)
> x > 5
 [1] FALSE FALSE FALSE FALSE FALSE  TRUE  TRUE  TRUE  TRUE  TRUE
> all(x > 5)
[1] FALSE
> any(x > 5)
[1] TRUE

#head함수, any함수 사용
> head(women)
  height weight
1     58    115
2     59    117
3     60    120
4     61    123
5     62    126
6     63    129
> tail(women)
   height weight
10     67    142
11     68    146
12     69    150
13     70    154
14     71    159
15     72    164
> head(women, 3)
  height weight
1     58    115
2     59    117
3     60    120

#유용한 함수들
> x <- c(15, 8, 24, 31, 12, 9, 17)
> x
[1] 15  8 24 31 12  9 17
> sum(x)  #합계
[1] 116
> max(x)  #최대값
[1] 31
> min(x)  #최소값
[1] 8
> mean(x)  #평균
[1] 16.57143
> median(x)  #중간값
[1] 15
> mode(x)  #변수의 유형 확인
[1] "numeric"

#집합 비교 함수
> x <- c(1, 2, 3)
> y <- c(3, 4, 5)
> z <- c(3, 1, 2)
> 
> union(x, y)
[1] 1 2 3 4 5
> intersect(x, y)
[1] 3
> setdiff(x, y)
[1] 1 2
> setdiff(y, z)
[1] 4 5
> setequal(x, y)
[1] FALSE
> setequal(x, z)
[1] TRUE

#strsplit함수를 사용해서 문자열 분리
> str8 <- c("2019/12/25")
> str8
[1] "2019/12/25"
> strsplit(str8, split = "/")
[[1]]
[1] "2019" "12"   "25"  

#paste함수로 문자열 합치기
> str8_1 <- 2019
> str8_2 <- 12
> str8_3 <- 25

> paste(str8_1, str8_2, str8_3, sep = "/")
[1] "2019/12/25"

# 대,소문자로 변환
> str2 <- "text"
> str2
[1] "text"
> toupper(str2)
[1] "TEXT"
> tolower(str2)
[1] "text"

#펙터사용해보기
fruit1 <- factor(c("사과", "복숭아", "사과", "오렌지", "사과", "오렌지", "복숭아"))
fruit1
mode(fruit1)

#만족도 조사 비교하는 팩터
satis_answer <-
  c("매우 불만족", "만족", "불만족", "매우 만족", "보통", "만족", 
    "매우 만족", "보통")
an_label <-
  c("매우 불만족", "불만족", "보통", "만족", "매우 만족")
satisfaction <- factor(satis_answer)
satisfaction
str(satisfaction)

satisfaction2 <-
  factor(satisfaction,
         levels = an_label,
         ordered = T)
satisfaction2
str(satisfaction2)  # 이코드는 Levels: 매우 불만족 < 불만족 < 보통 < 만족 < 매우 만족을 설정해서
                    # 뽑을 수 있다
                   
              
#팩터를 일반 숫자로 변환하기
V_num_factor <-
  factor(c(100, 200, 100, 200, 300, 200, 300))
V_num_factor
as.numeric(V_num_factor)
V_num_char <- as.character(V_num_factor)  #숫자 -> 문자
V_num_char
V_num <- as.numeric(V_num_char)  #문자 -> 숫자
V_num

#논리 변수
v_login <- c(T, T, F, T)
v_login
str(v_login)
